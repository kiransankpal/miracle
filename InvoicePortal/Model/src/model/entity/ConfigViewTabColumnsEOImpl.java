package model.entity;

import java.sql.Clob;
import java.sql.Date;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 20 00:56:40 CEST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConfigViewTabColumnsEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CvtcId {
            public Object get(ConfigViewTabColumnsEOImpl obj) {
                return obj.getCvtcId();
            }

            public void put(ConfigViewTabColumnsEOImpl obj, Object value) {
                obj.setCvtcId((Number)value);
            }
        }
        ,
        CvtId {
            public Object get(ConfigViewTabColumnsEOImpl obj) {
                return obj.getCvtId();
            }

            public void put(ConfigViewTabColumnsEOImpl obj, Object value) {
                obj.setCvtId((Number)value);
            }
        }
        ,
        ConfigColumnsClob {
            public Object get(ConfigViewTabColumnsEOImpl obj) {
                return obj.getConfigColumnsClob();
            }

            public void put(ConfigViewTabColumnsEOImpl obj, Object value) {
                obj.setConfigColumnsClob((Clob)value);
            }
        }
        ,
        CreatedBy {
            public Object get(ConfigViewTabColumnsEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(ConfigViewTabColumnsEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(ConfigViewTabColumnsEOImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(ConfigViewTabColumnsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ChangedBy {
            public Object get(ConfigViewTabColumnsEOImpl obj) {
                return obj.getChangedBy();
            }

            public void put(ConfigViewTabColumnsEOImpl obj, Object value) {
                obj.setChangedBy((String)value);
            }
        }
        ,
        ChangedDate {
            public Object get(ConfigViewTabColumnsEOImpl obj) {
                return obj.getChangedDate();
            }

            public void put(ConfigViewTabColumnsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ConfigurationViewTabsEO {
            public Object get(ConfigViewTabColumnsEOImpl obj) {
                return obj.getConfigurationViewTabsEO();
            }

            public void put(ConfigViewTabColumnsEOImpl obj, Object value) {
                obj.setConfigurationViewTabsEO((EntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ConfigViewTabColumnsEOImpl object);

        public abstract void put(ConfigViewTabColumnsEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CVTCID = AttributesEnum.CvtcId.index();
    public static final int CVTID = AttributesEnum.CvtId.index();
    public static final int CONFIGCOLUMNSCLOB = AttributesEnum.ConfigColumnsClob.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CHANGEDBY = AttributesEnum.ChangedBy.index();
    public static final int CHANGEDDATE = AttributesEnum.ChangedDate.index();
    public static final int CONFIGURATIONVIEWTABSEO = AttributesEnum.ConfigurationViewTabsEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ConfigViewTabColumnsEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entity.ConfigViewTabColumnsEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for CvtcId, using the alias name CvtcId.
     * @return the CvtcId
     */
    public Number getCvtcId() {
        return (Number)getAttributeInternal(CVTCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CvtcId.
     * @param value value to set the CvtcId
     */
    public void setCvtcId(Number value) {
        setAttributeInternal(CVTCID, value);
    }

    /**
     * Gets the attribute value for CvtId, using the alias name CvtId.
     * @return the CvtId
     */
    public Number getCvtId() {
        return (Number)getAttributeInternal(CVTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CvtId.
     * @param value value to set the CvtId
     */
    public void setCvtId(Number value) {
        setAttributeInternal(CVTID, value);
    }

    /**
     * Gets the attribute value for ConfigColumnsClob, using the alias name ConfigColumnsClob.
     * @return the ConfigColumnsClob
     */
    public Clob getConfigColumnsClob() {
        return (Clob)getAttributeInternal(CONFIGCOLUMNSCLOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConfigColumnsClob.
     * @param value value to set the ConfigColumnsClob
     */
    public void setConfigColumnsClob(Clob value) {
        setAttributeInternal(CONFIGCOLUMNSCLOB, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for ChangedBy, using the alias name ChangedBy.
     * @return the ChangedBy
     */
    public String getChangedBy() {
        return (String)getAttributeInternal(CHANGEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChangedBy.
     * @param value value to set the ChangedBy
     */
    public void setChangedBy(String value) {
        setAttributeInternal(CHANGEDBY, value);
    }

    /**
     * Gets the attribute value for ChangedDate, using the alias name ChangedDate.
     * @return the ChangedDate
     */
    public Date getChangedDate() {
        return (Date)getAttributeInternal(CHANGEDDATE);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getConfigurationViewTabsEO() {
        return (EntityImpl)getAttributeInternal(CONFIGURATIONVIEWTABSEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setConfigurationViewTabsEO(EntityImpl value) {
        setAttributeInternal(CONFIGURATIONVIEWTABSEO, value);
    }


    /**
     * @param cvtcId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number cvtcId) {
        return new Key(new Object[]{cvtcId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
    
    
}
